{"remainingRequest":"/media/jacopo/VolumeDati/Documenti/papero.tk/unseen.papero.tk/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/media/jacopo/VolumeDati/Documenti/papero.tk/unseen.papero.tk/src/views/Game.vue?vue&type=template&id=72f6b238","dependencies":[{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/unseen.papero.tk/src/views/Game.vue","mtime":1615202961532},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/unseen.papero.tk/node_modules/babel-loader/lib/index.js","mtime":1612540687689},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/unseen.papero.tk/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1612540688641},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/unseen.papero.tk/node_modules/cache-loader/dist/cjs.js","mtime":1612540687717},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/unseen.papero.tk/node_modules/vue-loader-v16/dist/index.js","mtime":1612540688641}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdiBjbGFzcz0iZ2FtZV9fbWFpbi1wYW5lbCI+CiAgICA8VXNlckhhbWJ1cmdlck1lbnUgOnNob3ctY2hhdD0idHJ1ZSIKICAgICAgICAgICAgICAgICAgICAgICA6bWVzc2FnZXM9Im1lc3NhZ2VzIgogICAgICAgICAgICAgICAgICAgICAgIDpkaXNhYmxlLWxvZ291dD0idHJ1ZSIKICAgICAgICAgICAgICAgICAgICAgICA6dW5yZWFkLW1lc3NhZ2VzPSJ1bnJlYWRNZXNzYWdlcyIKICAgICAgICAgICAgICAgICAgICAgICA6c3JjPSJoYW1idXJnZXJNZW51SW1hZ2UiCiAgICAgICAgICAgICAgICAgICAgICAgOnNob3c9InNob3dIYW1idXJnZXJNZW51IgogICAgICAgICAgICAgICAgICAgICAgIEBjaGF0LW9wZW5lZD0idW5yZWFkTWVzc2FnZXM9ZmFsc2UiCiAgICAgICAgICAgICAgICAgICAgICAgQHNlbmQtbWVzc2FnZT0ic2VuZE1lc3NhZ2UiCiAgICAgICAgICAgICAgICAgICAgICAgQHRvZ2dsZS1zaG93PSJzaG93SGFtYnVyZ2VyTWVudT0kZXZlbnQiLz4KICAgIDxQcmVHYW1lUGhhc2Ugdi1pZj0ic3RhdHVzPT09MCIKICAgICAgICAgICAgICAgICAgOnBsYXllcnM9InBsYXllcnMiCiAgICAgICAgICAgICAgICAgIDpjdXJyZW50LXBsYXllcj0iY3VycmVudFBsYXllciIKICAgICAgICAgICAgICAgICAgQGpvaW5nYW1lPSJqb2luR2FtZSIKICAgICAgICAgICAgICAgICAgQHF1aXRnYW1lPSJxdWl0R2FtZSIKICAgICAgICAgICAgICAgICAgQGtpY2twbGF5ZXI9ImtpY2tQbGF5ZXIiCiAgICAgICAgICAgICAgICAgIEBjaGFuZ2Vjb2xvcj0iY2hhbmdlQ29sb3IiCiAgICAgICAgICAgICAgICAgIEBjaGFuZ2VtaXN0ZXJ4PSJjaGFuZ2VNaXN0ZXJYIgogICAgICAgICAgICAgICAgICBAc3RhcnRnYW1lPSJzdGFydEdhbWUiLz4KICAgIDxHYW1lUGhhc2Ugdi1lbHNlLWlmPSJzdGF0dXM9PT0xIgogICAgICAgICAgICAgICA6cGxheWVycz0icGxheWVycyIKICAgICAgICAgICAgICAgOmN1cnJlbnQtcGxheWVyPSJjdXJyZW50UGxheWVyIgogICAgICAgICAgICAgICA6Z2FtZT0iZ2FtZSIKICAgICAgICAgICAgICAgOmNoYW5nZWQtc3RhdHVzLXBhbmVsPSJjaGFuZ2VkU3RhdHVzUGFuZWwiCiAgICAgICAgICAgICAgIEBtb3ZlPSJtb3ZlIgogICAgICAgICAgICAgICBAY2xvc2Utc3RhdHVzLWNoYW5nZWQtcGFuZWw9ImNoYW5nZWRTdGF0dXNQYW5lbC5zaG93PWZhbHNlIgogICAgICAgICAgICAgICBAdXNlLWRvdWJsZS10dXJuPSJ1c2VEb3VibGVUdXJuIi8+CiAgICA8UG9zdEdhbWVQaGFzZSB2LWVsc2UtaWY9InN0YXR1cz09PTIiCiAgICAgICAgICAgICAgICAgICA6cGxheWVycz0icGxheWVycyIKICAgICAgICAgICAgICAgICAgIDpjdXJyZW50LXBsYXllcj0iY3VycmVudFBsYXllciIKICAgICAgICAgICAgICAgICAgIDpnYW1lPSJnYW1lIgogICAgICAgICAgICAgICAgICAgOmdhbWUtcmVzdGFydGVkPSJnYW1lUmVzdGFydGVkIgogICAgICAgICAgICAgICAgICAgQHJlc3RhcnQtZ2FtZT0icmVzdGFydEdhbWUiLz4KICA8L2Rpdj4K"},{"version":3,"sources":["/media/jacopo/VolumeDati/Documenti/papero.tk/unseen.papero.tk/src/views/Game.vue"],"names":[],"mappings":"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AC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;kBAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;eACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;eACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;eAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;eACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;eACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;eACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;eAC1D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;mBACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;mBACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;mBAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;mBACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;mBAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC7C,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/media/jacopo/VolumeDati/Documenti/papero.tk/unseen.papero.tk/src/views/Game.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"game__main-panel\">\n    <UserHamburgerMenu :show-chat=\"true\"\n                       :messages=\"messages\"\n                       :disable-logout=\"true\"\n                       :unread-messages=\"unreadMessages\"\n                       :src=\"hamburgerMenuImage\"\n                       :show=\"showHamburgerMenu\"\n                       @chat-opened=\"unreadMessages=false\"\n                       @send-message=\"sendMessage\"\n                       @toggle-show=\"showHamburgerMenu=$event\"/>\n    <PreGamePhase v-if=\"status===0\"\n                  :players=\"players\"\n                  :current-player=\"currentPlayer\"\n                  @joingame=\"joinGame\"\n                  @quitgame=\"quitGame\"\n                  @kickplayer=\"kickPlayer\"\n                  @changecolor=\"changeColor\"\n                  @changemisterx=\"changeMisterX\"\n                  @startgame=\"startGame\"/>\n    <GamePhase v-else-if=\"status===1\"\n               :players=\"players\"\n               :current-player=\"currentPlayer\"\n               :game=\"game\"\n               :changed-status-panel=\"changedStatusPanel\"\n               @move=\"move\"\n               @close-status-changed-panel=\"changedStatusPanel.show=false\"\n               @use-double-turn=\"useDoubleTurn\"/>\n    <PostGamePhase v-else-if=\"status===2\"\n                   :players=\"players\"\n                   :current-player=\"currentPlayer\"\n                   :game=\"game\"\n                   :game-restarted=\"gameRestarted\"\n                   @restart-game=\"restartGame\"/>\n  </div>\n</template>\n\n<script>\nimport mitt from \"mitt\";\nimport {colorCorrispectives, webSocketUrl} from \"../constants/constants\";\nimport events from \"../constants/webSocketEvents\";\nimport {useRoute} from \"vue-router\";\nimport io from \"socket.io-client\";\nimport {defineAsyncComponent} from \"vue\";\nimport PreGamePhase from \"../components/PreGamePhase\";\nimport GamePhase from \"../components/GamePhase\";\nimport PostGamePhase from \"../components/PostGamePhase\";\n\nwindow.mitt = window.mitt || new mitt();\n\nconst UserHamburgerMenu = defineAsyncComponent(() => import(\"../components/UserHamburgerMenu\" /* webpackChunkName: \"userHamburgerMenu\" */));\n\nexport default {\n  name: \"Game\",\n  components: {\n    UserHamburgerMenu,\n    PreGamePhase,\n    GamePhase,\n    PostGamePhase\n  },\n  data(){\n    return {\n      socket: null,\n      gameId: useRoute().params.gameId,\n      status: undefined,\n      currentPlayer: undefined,\n      players: [],\n      game: {},\n      messages: [],\n      unreadMessages: false,\n      showHamburgerMenu: false,\n      changedStatusPanel: {\n        title: null,\n        description: null,\n        show: false\n      },\n      hamburgerMenuImage: require(\"@/assets/hamburger_icon_light.png\"),\n      gameRestarted: null\n    }\n  },\n  methods: {\n    setupData(data) {\n      console.log(data);\n      let wasYourTurn;\n      if(this.currentPlayer) wasYourTurn = this.game.playingPlayer === this.currentPlayer.local_id;\n      let wasRevelation = this.game.isRevelation;\n      this.status = data.status;\n      if(data.your_local_id!=null){\n        data.players.forEach(player => {\n          if(player.local_id===data.your_local_id){\n            this.currentPlayer = player;\n          }\n        })\n      } else {\n        this.currentPlayer = null;\n      }\n      this.players = data.players;\n      this.game = {\n        playingPlayer: data.players_turn,\n        isRevelation: data.is_revelation_turn,\n        lastMisterXKnownPosition: data.last_known_position,\n        misterXMoves: data.mister_x_moves,\n        misterXWon: data.mister_x_won\n      }\n      if(this.currentPlayer) {\n        let isYourTurn = this.game.playingPlayer === this.currentPlayer.local_id;\n        if ( !wasYourTurn && isYourTurn ) this.handleYourTurn();\n      }\n\n      let isRevelation = this.game.isRevelation;\n      if(!wasRevelation && isRevelation) {\n        this.handleRevelation();\n      }\n      window.mitt.emit(\"update-pawns\", this.players);\n    },\n    appendMessage(data){\n      this.unreadMessages = true;\n      let message = {};\n      message.localId = data._from;\n      message.username = this.findUsernameByLocalId(data._from);\n      message.body = data.message;\n      message.color = this.findColorByLocalId(data._from);\n      message.fromYou = data._from === this.currentPlayer.local_id;\n      this.messages.push(message);\n      if(!message.fromYou) this.$toast.show(message.body, {\n        duration: 2000,\n        maxToasts: 4,\n        className: \"toast \"+message.color\n      });\n      setTimeout(()=>{\n        let chat = document.getElementById(\"chat-container\");\n        chat.scrollTop = chat.scrollHeight;\n      }, 100)\n    },\n    findUsernameByLocalId(id){\n      for(let i = 0; i < this.players.length; i++){\n        if(this.players[i].local_id===id){\n          return this.players[i].username;\n        }\n      }\n      return null;\n    },\n    findColorByLocalId(id){\n      for(let i = 0; i < this.players.length; i++){\n        if(this.players[i].local_id===id){\n          return colorCorrispectives[this.players[i].color+1];\n        }\n      }\n      return null;\n    },\n    joinGame() {\n      this.socket.emit(events.JOIN_GAME);\n    },\n    quitGame() {\n      this.socket.emit(events.QUIT_GAME);\n    },\n    kickPlayer(localId){\n      this.socket.emit(events.KICK_PLAYER, localId);\n    },\n    changeColor(newColor){\n      this.socket.emit(events.CHANGE_COLOR, newColor);\n    },\n    startGame(){\n      this.socket.emit(events.START_GAME);\n    },\n    changeMisterX(newMisterX){\n      this.socket.emit(events.CHANGE_MISTER_X, newMisterX);\n    },\n    sendMessage(message){\n      let msg = message;\n      msg._from = this.currentPlayer.local_id;\n      this.socket.emit(events.CHAT, msg);\n    },\n    move(event){\n      this.socket.emit(events.MOVE, event);\n    },\n    useDoubleTurn(){\n      this.socket.emit(events.USE_DOUBLE_TURN);\n    },\n    restartGame(){\n      this.socket.emit(events.RESTART_GAME);\n      location.reload();\n    },\n    handleEvents (title, description, time){\n      this.changedStatusPanel.title = title;\n      this.changedStatusPanel.description = description;\n      this.changedStatusPanel.show = true;\n      const show = async () => {\n        setTimeout(()=>{\n          this.changedStatusPanel.show = false;\n        }, time)\n      }\n      show();\n    },\n    handleYourTurn(){\n      this.$toast.show(\n          \"It's your turn\",\n          {\n            duration: 4000,\n            maxToasts: 4,\n            className: \"toast turn-notification\",\n            position: \"top\"\n          }\n      );\n    },\n    handleRevelation(){\n      let title = \"Revelation\";\n      let description;\n      if(this.currentPlayer.is_mister_x){\n        description = \"Your position was revealed! Be careful!\";\n      } else {\n        description = \"Mister X's position is \" + this.game.lastMisterXKnownPosition+\"! Go catch him!\";\n      }\n      this.handleEvents(title,\n          description,\n          4000);\n      window.mitt.emit(\"zoom-to-default\");\n      this.players.forEach(player => {\n        if(player.is_mister_x) {\n          player.position = this.game.lastMisterXKnownPosition;\n          window.mitt.emit(\"zoom-to-pawn\", player);\n        }\n      });\n    },\n    handleDoubleTurn(){\n      if(!this.currentPlayer.is_mister_x){\n        this.handleEvents(\"Double turn\",\n            \"Oh no! Mister X played a double turn card, you were close!\",\n            4000);\n      } else {\n        this.currentPlayer.used_double_turns++;\n        this.handleEvents(\"Double turn\",\n            \"Well played! Now you can move twice, they will surely lose your track!\",\n            4000);\n      }\n    }\n  },\n  mounted() {\n    this.socket = io(webSocketUrl, {\n      path: \"/unseen/socket.io/\"\n    });\n\n    this.socket.emit(events.CONNECT_TO_GAME, {game_id: this.gameId});\n\n    this.socket.on(events.CONNECT_TO_GAME, (data) => {\n      this.setupData(data);\n    });\n\n    this.socket.on(events.LOBBY_MODIFIED, data => {\n      this.setupData(data);\n    });\n\n    this.socket.on(events.START_GAME, data => {\n      this.setupData(data);\n    });\n\n    this.socket.on(events.GAME_MODIFIED, data => {\n      this.setupData(data);\n    });\n\n    this.socket.on(events.USE_DOUBLE_TURN, this.handleDoubleTurn);\n\n    this.socket.on(events.CHAT, data => {\n      this.appendMessage(data);\n    });\n\n    this.socket.on(events.END_GAME, (data)=>{\n      this.handleEvents(\"Game Over\", \"The game finished\", 4000);\n      setTimeout(()=>{\n        this.setupData(data);\n      }, 4000)\n    });\n\n    this.socket.on(events.RESTART_GAME, ()=>{\n      this.gameRestarted = true;\n    });\n\n    /*this.status = 2;\n    this.currentPlayer = {\n      local_id: 0,\n      color: -1,\n      is_mister_x: true,\n      is_admin: false,\n      username: \"jacopo\",\n      used_taxi: 0,\n      used_bus: 0,\n      used_underground: 0,\n      used_secret_moves: 2,\n      used_double_turns: 0,\n      online: true,\n      position: 1,\n      available_moves: {\n        taxi: [8],\n        bus: [47, 59],\n        underground: [47]\n      }\n    }\n    this.players = [\n      this.currentPlayer,\n      {\n        local_id: 1,\n        color: 1,\n        is_mister_x: false,\n        is_admin: false,\n        username: \"matteo\",\n        online: true,\n        position: 2\n      },\n      {\n        local_id: 2,\n        color: 2,\n        is_mister_x: false,\n        is_admin: false,\n        username: \"rami\",\n        online: false,\n        position: 3\n      },\n      {\n        local_id: 3,\n        color: 3,\n        is_mister_x: false,\n        is_admin: false,\n        username: \"tave\",\n        online: true,\n        position: 4\n      }\n    ]\n    this.game = {\n      playingPlayer: null,\n      lastMisterXKnownPosition: null,\n      misterXMoves: [\n        {\n          transport: 0,\n          position: 20\n        },\n        {\n          transport: 1,\n          position: 22\n        },\n        {\n          transport: 2,\n          position: 30\n        },\n        {\n          transport: 3,\n          position: 55\n        }\n      ]\n    }\n\n    this.messages = [\n      {\n        body: \"ciaooo\",\n        local_id: 0,\n        fromYou: true,\n        username: \"jacopo\",\n        color: \"gray\"\n      }\n    ];*/\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"../styles/global\";\n\n.game__main-panel{\n  background-image: url(\"../assets/background_image.jpg\");\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: bottom;\n\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n}\n\nbutton {\n  color: white;\n  padding: 1%;\n  background: transparent;\n  border: 2px solid white;\n  transition: all 0.5s;\n  margin: 1%;\n\n  &:hover{\n    background-color: white;\n    color: $theme-color-dark;\n  }\n\n  &:focus{\n    outline: none;\n  }\n}\n\n.toast{\n  display: grid;\n  align-items: center;\n  animation-duration: 150ms;\n  margin: 0.5em 0;\n  border-radius: 0.5em;\n  pointer-events: auto;\n  color: #fff;\n  background-color: orange;\n  min-height: 3em;\n  cursor: pointer;\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  padding: 0.5em 2em;\n  word-break: break-word;\n  width: fit-content;\n  align-self: flex-end;\n\n  &.turn-notification {\n    background-color: black;\n    align-self: center;\n    justify-content: start;\n  }\n\n  &.black{background-color: #323232;}\n\n  &.red{background-color: red;}\n\n  &.blue{background-color: blue;}\n\n  &.green{background-color: green;}\n\n  &.pink{background-color: deeppink;}\n\n  &.gray{\n    background-color: #c8c8c8;\n    color: black;\n  }\n}\n</style>"]}]}