{"remainingRequest":"C:\\Users\\matte\\Desktop\\ScotlandYard\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\matte\\Desktop\\ScotlandYard\\src\\views\\Game.vue?vue&type=template&id=ac95d31a&scoped=true","dependencies":[{"path":"C:\\Users\\matte\\Desktop\\ScotlandYard\\src\\views\\Game.vue","mtime":1612515605955},{"path":"C:\\Users\\matte\\Desktop\\ScotlandYard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\matte\\Desktop\\ScotlandYard\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\matte\\Desktop\\ScotlandYard\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\matte\\Desktop\\ScotlandYard\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\matte\\Desktop\\ScotlandYard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\matte\\Desktop\\ScotlandYard\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogIDxkaXYgY2xhc3M9ImdhbWVfX21haW4tcGFuZWwiPg0KICAgIDxQcmVnYW1lUGhhc2Ugdi1pZj0ic3RhdHVzPT09MCINCiAgICAgICAgICAgICAgICAgIDpwbGF5ZXJzPSJwbGF5ZXJzIg0KICAgICAgICAgICAgICAgICAgOmN1cnJlbnQtcGxheWVyPSJjdXJyZW50UGxheWVyIg0KICAgICAgICAgICAgICAgICAgQGpvaW5nYW1lPSJqb2luR2FtZSINCiAgICAgICAgICAgICAgICAgIEBxdWl0Z2FtZT0icXVpdEdhbWUiDQogICAgICAgICAgICAgICAgICBAa2lja3BsYXllcj0ia2lja1BsYXllciINCiAgICAgICAgICAgICAgICAgIEBjaGFuZ2Vjb2xvcj0iY2hhbmdlQ29sb3IiDQogICAgICAgICAgICAgICAgICBAY2hhbmdlbWlzdGVyeD0iY2hhbmdlTWlzdGVyWCINCiAgICAgICAgICAgICAgICAgIEBzdGFydGdhbWU9InN0YXJ0R2FtZSIvPg0KICAgIDxHYW1lUGhhc2Ugdi1lbHNlLWlmPSJzdGF0dXM9PT0xIg0KICAgICAgICAgICAgICAgOnBsYXllcnM9InBsYXllcnMiDQogICAgICAgICAgICAgICA6Y3VycmVudC1wbGF5ZXI9ImN1cnJlbnRQbGF5ZXIiDQogICAgICAgICAgICAgICA6Z2FtZT0iZ2FtZSIvPg0KICAgIDxQb3N0R2FtZVBoYXNlIHYtZWxzZS1pZj0ic3RhdHVzPT09MiIvPg0KICA8L2Rpdj4NCg=="},{"version":3,"sources":["C:\\Users\\matte\\Desktop\\ScotlandYard\\src\\views\\Game.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;kBAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;kBACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;kBAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;kBACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;kBACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;kBACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;kBACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;kBAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;eACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;eACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;eAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACxC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"C:/Users/matte/Desktop/ScotlandYard/src/views/Game.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <div class=\"game__main-panel\">\r\n    <PregamePhase v-if=\"status===0\"\r\n                  :players=\"players\"\r\n                  :current-player=\"currentPlayer\"\r\n                  @joingame=\"joinGame\"\r\n                  @quitgame=\"quitGame\"\r\n                  @kickplayer=\"kickPlayer\"\r\n                  @changecolor=\"changeColor\"\r\n                  @changemisterx=\"changeMisterX\"\r\n                  @startgame=\"startGame\"/>\r\n    <GamePhase v-else-if=\"status===1\"\r\n               :players=\"players\"\r\n               :current-player=\"currentPlayer\"\r\n               :game=\"game\"/>\r\n    <PostGamePhase v-else-if=\"status===2\"/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport PregamePhase from \"../components/PregamePhase\";\r\nimport GamePhase from \"../components/GamePhase\";\r\nimport PostGamePhase from \"../components/PostGamePhase\";\r\nimport {webSocketUrl} from \"../constants/constants\";\r\nimport events from \"../constants/webSocketEvents\";\r\nimport {useRoute} from \"vue-router\";\r\nimport io from \"socket.io-client\";\r\nimport {ref} from \"@vue/reactivity\";\r\n\r\n\r\nexport default {\r\n  name: \"Game\",\r\n  components: {PostGamePhase, GamePhase, PregamePhase},\r\n  setup(){\r\n\r\n    const socket = io(webSocketUrl);\r\n\r\n    const gameId = useRoute().params.gameId;\r\n    const status = ref(undefined);\r\n    const currentPlayer = ref(undefined);\r\n    const players = ref([]);\r\n    const game = ref({});\r\n\r\n    //TODO: LOGIC FOR FETCHING USER ID FROM FLASK AND USERNAME\r\n    let id = prompt(\"id:\")\r\n    let username = prompt(\"username:\")\r\n    socket.emit(events.CONNECT_TO_GAME, {user_id: id, game_id: gameId, username: username});\r\n\r\n    function setupData(data){\r\n      status.value = data.status;\r\n      if(data.your_local_id!=null){\r\n        data.players.forEach(player => {\r\n          if(player.local_id===data.your_local_id){\r\n            currentPlayer.value = player;\r\n          }\r\n        })\r\n      } else {\r\n        currentPlayer.value = null;\r\n      }\r\n      players.value = data.players;\r\n      game.value = {\r\n        playingPlayer: data.players_turn,\r\n        isRevelation: data.is_revelation_turn,\r\n        lastMisterXKnownPosition: data.last_known_position,\r\n        misterXMoves: data.mister_x_moves\r\n      }\r\n    }\r\n\r\n    socket.on(events.CONNECT_TO_GAME, (data) => {\r\n      setupData(data);\r\n    });\r\n\r\n    socket.on(events.LOBBY_MODIFIED, data => {\r\n      setupData(data);\r\n    });\r\n\r\n    socket.on(events.START_GAME, data => {\r\n      setupData(data);\r\n    });\r\n\r\n    function joinGame() {\r\n      socket.emit(events.JOIN_GAME);\r\n    }\r\n\r\n    function quitGame() {\r\n      socket.emit(events.QUIT_GAME);\r\n    }\r\n\r\n    function kickPlayer(localId){\r\n      socket.emit(events.KICK_PLAYER, localId);\r\n    }\r\n\r\n    function changeColor(newColor){\r\n      socket.emit(events.CHANGE_COLOR, newColor);\r\n    }\r\n\r\n    function startGame(){\r\n      socket.emit(events.START_GAME);\r\n    }\r\n\r\n    function changeMisterX(newMisterX){\r\n      socket.emit(events.CHANGE_MISTER_X, newMisterX);\r\n    }\r\n\r\n    return {\r\n      status,\r\n      currentPlayer,\r\n      players,\r\n      game,\r\n      joinGame,\r\n      quitGame,\r\n      kickPlayer,\r\n      changeColor,\r\n      changeMisterX,\r\n      startGame\r\n    }\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n.game__main-panel{\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n}\r\n</style>"]}]}