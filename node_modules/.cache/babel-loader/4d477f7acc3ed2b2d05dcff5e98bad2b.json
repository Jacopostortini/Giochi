{"remainingRequest":"C:\\Users\\matte\\Desktop\\papero\\unseen.papero.tk\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\matte\\Desktop\\papero\\unseen.papero.tk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\matte\\Desktop\\papero\\unseen.papero.tk\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!C:\\Users\\matte\\Desktop\\papero\\unseen.papero.tk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\matte\\Desktop\\papero\\unseen.papero.tk\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\matte\\Desktop\\papero\\unseen.papero.tk\\src\\views\\Game.vue?vue&type=template&id=4c908c49","dependencies":[{"path":"C:\\Users\\matte\\Desktop\\papero\\unseen.papero.tk\\src\\views\\Game.vue","mtime":1614767940244},{"path":"C:\\Users\\matte\\Desktop\\papero\\unseen.papero.tk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1613722167369},{"path":"C:\\Users\\matte\\Desktop\\papero\\unseen.papero.tk\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1613722194264},{"path":"C:\\Users\\matte\\Desktop\\papero\\unseen.papero.tk\\node_modules\\babel-loader\\lib\\index.js","mtime":1613722166857},{"path":"C:\\Users\\matte\\Desktop\\papero\\unseen.papero.tk\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1613722194905},{"path":"C:\\Users\\matte\\Desktop\\papero\\unseen.papero.tk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1613722167369},{"path":"C:\\Users\\matte\\Desktop\\papero\\unseen.papero.tk\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1613722194889}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrLCBjcmVhdGVDb21tZW50Vk5vZGUgYXMgX2NyZWF0ZUNvbW1lbnRWTm9kZSB9IGZyb20gInZ1ZSI7CnZhciBfaG9pc3RlZF8xID0gewogIGNsYXNzOiAiZ2FtZV9fbWFpbi1wYW5lbCIKfTsKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICB2YXIgX2NvbXBvbmVudF9Vc2VySGFtYnVyZ2VyTWVudSA9IF9yZXNvbHZlQ29tcG9uZW50KCJVc2VySGFtYnVyZ2VyTWVudSIpOwoKICB2YXIgX2NvbXBvbmVudF9QcmVHYW1lUGhhc2UgPSBfcmVzb2x2ZUNvbXBvbmVudCgiUHJlR2FtZVBoYXNlIik7CgogIHZhciBfY29tcG9uZW50X0dhbWVQaGFzZSA9IF9yZXNvbHZlQ29tcG9uZW50KCJHYW1lUGhhc2UiKTsKCiAgdmFyIF9jb21wb25lbnRfUG9zdEdhbWVQaGFzZSA9IF9yZXNvbHZlQ29tcG9uZW50KCJQb3N0R2FtZVBoYXNlIik7CgogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygiZGl2IiwgX2hvaXN0ZWRfMSwgW19jcmVhdGVWTm9kZShfY29tcG9uZW50X1VzZXJIYW1idXJnZXJNZW51LCB7CiAgICAic2hvdy1jaGF0IjogdHJ1ZSwKICAgIG1lc3NhZ2VzOiAkZGF0YS5tZXNzYWdlcywKICAgICJkaXNhYmxlLWxvZ291dCI6IHRydWUsCiAgICAidW5yZWFkLW1lc3NhZ2VzIjogJGRhdGEudW5yZWFkTWVzc2FnZXMsCiAgICBzcmM6ICRvcHRpb25zLmhhbWJ1cmdlck1lbnVJbWFnZSwKICAgIHNob3c6ICRkYXRhLnNob3dIYW1idXJnZXJNZW51LAogICAgb25DaGF0T3BlbmVkOiBfY2FjaGVbMV0gfHwgKF9jYWNoZVsxXSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgcmV0dXJuICRkYXRhLnVucmVhZE1lc3NhZ2VzID0gZmFsc2U7CiAgICB9KSwKICAgIG9uU2VuZE1lc3NhZ2U6ICRvcHRpb25zLnNlbmRNZXNzYWdlLAogICAgb25Ub2dnbGVTaG93OiBfY2FjaGVbMl0gfHwgKF9jYWNoZVsyXSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgcmV0dXJuICRkYXRhLnNob3dIYW1idXJnZXJNZW51ID0gJGV2ZW50OwogICAgfSkKICB9LCBudWxsLCA4LCBbIm1lc3NhZ2VzIiwgInVucmVhZC1tZXNzYWdlcyIsICJzcmMiLCAic2hvdyIsICJvblNlbmRNZXNzYWdlIl0pLCAkZGF0YS5zdGF0dXMgPT09IDAgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soX2NvbXBvbmVudF9QcmVHYW1lUGhhc2UsIHsKICAgIGtleTogMCwKICAgIHBsYXllcnM6ICRkYXRhLnBsYXllcnMsCiAgICAiY3VycmVudC1wbGF5ZXIiOiAkZGF0YS5jdXJyZW50UGxheWVyLAogICAgb25Kb2luZ2FtZTogJG9wdGlvbnMuam9pbkdhbWUsCiAgICBvblF1aXRnYW1lOiAkb3B0aW9ucy5xdWl0R2FtZSwKICAgIG9uS2lja3BsYXllcjogJG9wdGlvbnMua2lja1BsYXllciwKICAgIG9uQ2hhbmdlY29sb3I6ICRvcHRpb25zLmNoYW5nZUNvbG9yLAogICAgb25DaGFuZ2VtaXN0ZXJ4OiAkb3B0aW9ucy5jaGFuZ2VNaXN0ZXJYLAogICAgb25TdGFydGdhbWU6ICRvcHRpb25zLnN0YXJ0R2FtZQogIH0sIG51bGwsIDgsIFsicGxheWVycyIsICJjdXJyZW50LXBsYXllciIsICJvbkpvaW5nYW1lIiwgIm9uUXVpdGdhbWUiLCAib25LaWNrcGxheWVyIiwgIm9uQ2hhbmdlY29sb3IiLCAib25DaGFuZ2VtaXN0ZXJ4IiwgIm9uU3RhcnRnYW1lIl0pKSA6ICRkYXRhLnN0YXR1cyA9PT0gMSA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfY29tcG9uZW50X0dhbWVQaGFzZSwgewogICAga2V5OiAxLAogICAgcGxheWVyczogJGRhdGEucGxheWVycywKICAgICJjdXJyZW50LXBsYXllciI6ICRkYXRhLmN1cnJlbnRQbGF5ZXIsCiAgICBnYW1lOiAkZGF0YS5nYW1lLAogICAgb25Nb3ZlOiAkb3B0aW9ucy5tb3ZlCiAgfSwgbnVsbCwgOCwgWyJwbGF5ZXJzIiwgImN1cnJlbnQtcGxheWVyIiwgImdhbWUiLCAib25Nb3ZlIl0pKSA6ICRkYXRhLnN0YXR1cyA9PT0gMiA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfY29tcG9uZW50X1Bvc3RHYW1lUGhhc2UsIHsKICAgIGtleTogMgogIH0pKSA6IF9jcmVhdGVDb21tZW50Vk5vZGUoIiIsIHRydWUpXSk7Cn0="},{"version":3,"sources":["C:\\Users\\matte\\Desktop\\papero\\unseen.papero.tk\\src\\views\\Game.vue"],"names":[],"mappings":";;AACO,EAAA,KAAK,EAAC;;;;;;;;;;;uBAAX,YAAA,CAyBM,KAzBN,EAAA,UAAA,EAyBM,CAxBJ,YAAA,CAQ4D,4BAR5D,EAQ4D;AARxC,iBAAW,IAQ6B;AAPxC,IAAA,QAAQ,EAAE,KAAA,CAAA,QAO8B;AANxC,sBAAgB,IAMwB;AALxC,uBAAiB,KAAA,CAAA,cAKuB;AAJxC,IAAA,GAAG,EAAE,QAAA,CAAA,kBAImC;AAHxC,IAAA,IAAI,EAAE,KAAA,CAAA,iBAGkC;AAFxC,IAAA,YAAW,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,aAAE,KAAA,CAAA,cAAA,GAAc,KAAhB;AAAA,KAAA,CAE6B;AADxC,IAAA,aAAY,EAAE,QAAA,CAAA,WAC0B;AAAxC,IAAA,YAAW,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,aAAE,KAAA,CAAA,iBAAA,GAAkB,MAApB;AAAA,KAAA;AAA6B,GAR5D,E,IAAA,E,CAAA,E,+DAAA,CAwBI,EAfgB,KAAA,CAAA,MAAA,KAAM,C,kBAA1B,YAAA,CAQsC,uBARtC,EAQsC;UAAA;AAPvB,IAAA,OAAO,EAAE,KAAA,CAAA,OAOc;AANvB,sBAAgB,KAAA,CAAA,aAMO;AALvB,IAAA,UAAQ,EAAE,QAAA,CAAA,QAKa;AAJvB,IAAA,UAAQ,EAAE,QAAA,CAAA,QAIa;AAHvB,IAAA,YAAU,EAAE,QAAA,CAAA,UAGW;AAFvB,IAAA,aAAW,EAAE,QAAA,CAAA,WAEU;AADvB,IAAA,eAAa,EAAE,QAAA,CAAA,aACQ;AAAvB,IAAA,WAAS,EAAE,QAAA,CAAA;AAAY,GARtC,E,IAAA,E,CAAA,E,4HAAA,C,IASsB,KAAA,CAAA,MAAA,KAAM,C,kBAA5B,YAAA,CAIyB,oBAJzB,EAIyB;UAAA;AAHb,IAAA,OAAO,EAAE,KAAA,CAAA,OAGI;AAFb,sBAAgB,KAAA,CAAA,aAEH;AADb,IAAA,IAAI,EAAE,KAAA,CAAA,IACO;AAAb,IAAA,MAAI,EAAE,QAAA,CAAA;AAAO,GAJzB,E,IAAA,E,CAAA,E,+CAAA,C,IAK0B,KAAA,CAAA,MAAA,KAAM,C,kBAAhC,YAAA,CAAuC,wBAAvC,EAAuC;AAAA,IAAA,GAAA,EAAA;AAAA,GAAvC,C,iCACI,CAzBN,C","sourcesContent":["<template>\r\n  <div class=\"game__main-panel\">\r\n    <UserHamburgerMenu :show-chat=\"true\"\r\n                       :messages=\"messages\"\r\n                       :disable-logout=\"true\"\r\n                       :unread-messages=\"unreadMessages\"\r\n                       :src=\"hamburgerMenuImage\"\r\n                       :show=\"showHamburgerMenu\"\r\n                       @chat-opened=\"unreadMessages=false\"\r\n                       @send-message=\"sendMessage\"\r\n                       @toggle-show=\"showHamburgerMenu=$event\"/>\r\n    <PreGamePhase v-if=\"status===0\"\r\n                  :players=\"players\"\r\n                  :current-player=\"currentPlayer\"\r\n                  @joingame=\"joinGame\"\r\n                  @quitgame=\"quitGame\"\r\n                  @kickplayer=\"kickPlayer\"\r\n                  @changecolor=\"changeColor\"\r\n                  @changemisterx=\"changeMisterX\"\r\n                  @startgame=\"startGame\"/>\r\n    <GamePhase v-else-if=\"status===1\"\r\n               :players=\"players\"\r\n               :current-player=\"currentPlayer\"\r\n               :game=\"game\"\r\n               @move=\"move\"/>\r\n    <PostGamePhase v-else-if=\"status===2\"/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {colorCorrispectives, webSocketUrl} from \"../constants/constants\";\r\nimport events from \"../constants/webSocketEvents\";\r\nimport {useRoute} from \"vue-router\";\r\nimport io from \"socket.io-client\";\r\nimport {defineAsyncComponent} from \"vue\";\r\nimport PreGamePhase from \"../components/PreGamePhase\";\r\nimport GamePhase from \"../components/GamePhase\";\r\nimport PostGamePhase from \"../components/PostGamePhase\";\r\n\r\nconst UserHamburgerMenu = defineAsyncComponent(() => import(\"../components/UserHamburgerMenu\" /* webpackChunkName: \"userHamburgerMenu\" */));\r\n\r\nexport default {\r\n  name: \"Game\",\r\n  components: {\r\n    UserHamburgerMenu,\r\n    PreGamePhase,\r\n    GamePhase,\r\n    PostGamePhase\r\n  },\r\n  data(){\r\n    return {\r\n      socket: null,\r\n      gameId: useRoute().params.gameId,\r\n      status: undefined,\r\n      currentPlayer: undefined,\r\n      players: [],\r\n      game: {},\r\n      messages: [],\r\n      unreadMessages: false,\r\n      showHamburgerMenu: false\r\n    }\r\n  },\r\n  computed: {\r\n    hamburgerMenuImage: function () {\r\n      switch (this.status){\r\n        case 0:\r\n          return require(\"@/assets/hamburger_icon_light.png\");\r\n        case 1:\r\n          return require(\"@/assets/hamburger_icon_dark.png\");\r\n        case 2:\r\n          return require(\"@/assets/hamburger_icon_light.png\");\r\n        default:\r\n          return require(\"@/assets/hamburger_icon_light.png\");\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    setupData(data) {\r\n      console.log(data);\r\n      this.status = data.status;\r\n      if(data.your_local_id!=null){\r\n        data.players.forEach(player => {\r\n          if(player.local_id===data.your_local_id){\r\n            this.currentPlayer = player;\r\n          }\r\n        })\r\n      } else {\r\n        this.currentPlayer = null;\r\n      }\r\n      this.players = data.players;\r\n      this.game = {\r\n        playingPlayer: data.players_turn,\r\n        isRevelation: data.is_revelation_turn,\r\n        lastMisterXKnownPosition: data.last_known_position,\r\n        misterXMoves: data.mister_x_moves\r\n      }\r\n    },\r\n    appendMessage(data){\r\n      let message = {};\r\n      message.localId = data._from;\r\n      message.username = this.findUsernameByLocalId(data._from);\r\n      message.body = data.message;\r\n      message.color = this.findColorByLocalId(data._from);\r\n      message.fromYou = data._from === this.currentPlayer.local_id;\r\n      this.messages.push(message);\r\n      let t = setInterval(()=>{\r\n        let chat = document.getElementById(\"chat-container\");\r\n        chat.scrollTop = chat.scrollHeight;\r\n        clearInterval(t);\r\n      }, 100)\r\n    },\r\n    findUsernameByLocalId(id){\r\n      for(let i = 0; i < this.players.length; i++){\r\n        if(this.players[i].local_id===id){\r\n          return this.players[i].username;\r\n        }\r\n      }\r\n      return null;\r\n    },\r\n    findColorByLocalId(id){\r\n      for(let i = 0; i < this.players.length; i++){\r\n        if(this.players[i].local_id===id){\r\n          return colorCorrispectives[this.players[i].color];\r\n        }\r\n      }\r\n      return null;\r\n    },\r\n    messageReceived(data){\r\n      this.appendMessage(data);\r\n      this.unreadMessages = true;\r\n      if(data._from === -1) this.$toast.show(data.message, {\r\n        duration: 3000,\r\n        maxToasts: 4,\r\n        className: \"toast\"\r\n      });\r\n    },\r\n    joinGame() {\r\n      this.socket.emit(events.JOIN_GAME);\r\n    },\r\n    quitGame() {\r\n      this.socket.emit(events.QUIT_GAME);\r\n    },\r\n    kickPlayer(localId){\r\n      this.socket.emit(events.KICK_PLAYER, localId);\r\n    },\r\n    changeColor(newColor){\r\n      this.socket.emit(events.CHANGE_COLOR, newColor);\r\n    },\r\n    startGame(){\r\n      this.socket.emit(events.START_GAME);\r\n    },\r\n    changeMisterX(newMisterX){\r\n      this.socket.emit(events.CHANGE_MISTER_X, newMisterX);\r\n    },\r\n    sendMessage(message){\r\n      let msg = message;\r\n      msg._from = this.currentPlayer.local_id;\r\n      this.socket.emit(events.CHAT, msg);\r\n    },\r\n    move(event){\r\n      console.log(event)\r\n      this.socket.emit(events.MOVE, event);\r\n    }\r\n  },\r\n  mounted() {\r\n    this.socket = io(webSocketUrl, {\r\n      path: \"/unseen/socket.io/\"\r\n    });\r\n\r\n    this.socket.emit(events.CONNECT_TO_GAME, {game_id: this.gameId});\r\n\r\n    this.socket.on(events.CONNECT_TO_GAME, (data) => {\r\n      this.setupData(data);\r\n    });\r\n\r\n    this.socket.on(events.LOBBY_MODIFIED, data => {\r\n      this.setupData(data);\r\n    });\r\n\r\n    this.socket.on(events.START_GAME, data => {\r\n      this.setupData(data);\r\n    });\r\n\r\n    this.socket.on(events.GAME_MODIFIED, data => {\r\n      this.setupData(data);\r\n    });\r\n\r\n    this.socket.on(events.CHAT, data => {\r\n      this.messageReceived(data);\r\n    });\r\n\r\n    /*this.status = 1;\r\n    this.currentPlayer = {\r\n      local_id: 0,\r\n      color: 1,\r\n      is_mister_x: false,\r\n      is_admin: true,\r\n      username: \"jacopo\",\r\n      used_taxi: 0,\r\n      used_bus: 0,\r\n      used_underground: 0,\r\n      used_secret_moves: 0,\r\n      used_double_turns: 0,\r\n      online: true,\r\n      position: 1,\r\n      available_moves: {\r\n        taxi: [8],\r\n        bus: [47, 59],\r\n        underground: [47]\r\n      }\r\n    }\r\n    this.players = [\r\n      this.currentPlayer,\r\n      {\r\n        local_id: 1,\r\n        color: -1,\r\n        is_mister_x: true,\r\n        is_admin: false,\r\n        username: \"matteo\",\r\n        online: true,\r\n        //position: 2\r\n      },\r\n      {\r\n        local_id: 2,\r\n        color: 2,\r\n        is_mister_x: false,\r\n        is_admin: false,\r\n        username: \"rami\",\r\n        online: false,\r\n        position: 3\r\n      },\r\n      {\r\n        local_id: 3,\r\n        color: 3,\r\n        is_mister_x: false,\r\n        is_admin: false,\r\n        username: \"tave\",\r\n        online: true,\r\n        position: 4\r\n      }\r\n    ]\r\n    this.game = {\r\n      playingPlayer: 0\r\n    }\r\n\r\n    this.messages = [\r\n      {\r\n        body: \"ciaooo\",\r\n        local_id: 0,\r\n        fromYou: true,\r\n        username: \"jacopo\",\r\n        color: \"gray\"\r\n      }\r\n    ];*/\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"../styles/global\";\r\n\r\n.game__main-panel{\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n}\r\n\r\nbutton {\r\n  color: white;\r\n  padding: 1%;\r\n  background: transparent;\r\n  border: 2px solid white;\r\n  transition: all 0.5s;\r\n  margin: 1%;\r\n\r\n  &:hover{\r\n    background-color: white;\r\n    color: $theme-color-dark;\r\n  }\r\n\r\n  &:focus{\r\n    outline: none;\r\n  }\r\n}\r\n\r\n.toast{\r\n  display: grid;\r\n  align-items: center;\r\n  animation-duration: 150ms;\r\n  margin: 0.5em 0;\r\n  border-radius: 0.5em;\r\n  pointer-events: auto;\r\n  color: #fff;\r\n  background-color: orange;\r\n  min-height: 3em;\r\n  cursor: pointer;\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  padding: 0.5em 2em;\r\n  word-break: break-word;\r\n  width: fit-content;\r\n  align-self: flex-end;\r\n\r\n}\r\n</style>"],"sourceRoot":""}]}