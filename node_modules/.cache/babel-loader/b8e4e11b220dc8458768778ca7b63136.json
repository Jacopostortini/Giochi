{"remainingRequest":"C:\\Users\\matte\\Desktop\\papero\\unseen.papero.tk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\matte\\Desktop\\papero\\unseen.papero.tk\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!C:\\Users\\matte\\Desktop\\papero\\unseen.papero.tk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\matte\\Desktop\\papero\\unseen.papero.tk\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\matte\\Desktop\\papero\\unseen.papero.tk\\src\\views\\Game.vue?vue&type=template&id=3614b62c","dependencies":[{"path":"C:\\Users\\matte\\Desktop\\papero\\unseen.papero.tk\\src\\views\\Game.vue","mtime":1615123813154},{"path":"C:\\Users\\matte\\Desktop\\papero\\unseen.papero.tk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1613722167369},{"path":"C:\\Users\\matte\\Desktop\\papero\\unseen.papero.tk\\node_modules\\babel-loader\\lib\\index.js","mtime":1613722166857},{"path":"C:\\Users\\matte\\Desktop\\papero\\unseen.papero.tk\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1613722194905},{"path":"C:\\Users\\matte\\Desktop\\papero\\unseen.papero.tk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1613722167369},{"path":"C:\\Users\\matte\\Desktop\\papero\\unseen.papero.tk\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1613722194889}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrLCBjcmVhdGVDb21tZW50Vk5vZGUgYXMgX2NyZWF0ZUNvbW1lbnRWTm9kZSB9IGZyb20gInZ1ZSI7CmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgdmFyIF9jb21wb25lbnRfVXNlckhhbWJ1cmdlck1lbnUgPSBfcmVzb2x2ZUNvbXBvbmVudCgiVXNlckhhbWJ1cmdlck1lbnUiKTsKCiAgdmFyIF9jb21wb25lbnRfUHJlR2FtZVBoYXNlID0gX3Jlc29sdmVDb21wb25lbnQoIlByZUdhbWVQaGFzZSIpOwoKICB2YXIgX2NvbXBvbmVudF9HYW1lUGhhc2UgPSBfcmVzb2x2ZUNvbXBvbmVudCgiR2FtZVBoYXNlIik7CgogIHZhciBfY29tcG9uZW50X1Bvc3RHYW1lUGhhc2UgPSBfcmVzb2x2ZUNvbXBvbmVudCgiUG9zdEdhbWVQaGFzZSIpOwoKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soImRpdiIsIHsKICAgIGNsYXNzOiAiZ2FtZV9fbWFpbi1wYW5lbCIsCiAgICBvbkNsaWNrOiBfY2FjaGVbNF0gfHwgKF9jYWNoZVs0XSA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIF9jdHguY2xpY2sgJiYgX2N0eC5jbGljay5hcHBseShfY3R4LCBhcmd1bWVudHMpOwogICAgfSkKICB9LCBbX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfVXNlckhhbWJ1cmdlck1lbnUsIHsKICAgICJzaG93LWNoYXQiOiB0cnVlLAogICAgbWVzc2FnZXM6ICRkYXRhLm1lc3NhZ2VzLAogICAgImRpc2FibGUtbG9nb3V0IjogdHJ1ZSwKICAgICJ1bnJlYWQtbWVzc2FnZXMiOiAkZGF0YS51bnJlYWRNZXNzYWdlcywKICAgIHNyYzogJGRhdGEuaGFtYnVyZ2VyTWVudUltYWdlLAogICAgc2hvdzogJGRhdGEuc2hvd0hhbWJ1cmdlck1lbnUsCiAgICBvbkNoYXRPcGVuZWQ6IF9jYWNoZVsxXSB8fCAoX2NhY2hlWzFdID0gZnVuY3Rpb24gKCRldmVudCkgewogICAgICByZXR1cm4gJGRhdGEudW5yZWFkTWVzc2FnZXMgPSBmYWxzZTsKICAgIH0pLAogICAgb25TZW5kTWVzc2FnZTogJG9wdGlvbnMuc2VuZE1lc3NhZ2UsCiAgICBvblRvZ2dsZVNob3c6IF9jYWNoZVsyXSB8fCAoX2NhY2hlWzJdID0gZnVuY3Rpb24gKCRldmVudCkgewogICAgICByZXR1cm4gJGRhdGEuc2hvd0hhbWJ1cmdlck1lbnUgPSAkZXZlbnQ7CiAgICB9KQogIH0sIG51bGwsIDgKICAvKiBQUk9QUyAqLwogICwgWyJtZXNzYWdlcyIsICJ1bnJlYWQtbWVzc2FnZXMiLCAic3JjIiwgInNob3ciLCAib25TZW5kTWVzc2FnZSJdKSwgJGRhdGEuc3RhdHVzID09PSAwID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKF9jb21wb25lbnRfUHJlR2FtZVBoYXNlLCB7CiAgICBrZXk6IDAsCiAgICBwbGF5ZXJzOiAkZGF0YS5wbGF5ZXJzLAogICAgImN1cnJlbnQtcGxheWVyIjogJGRhdGEuY3VycmVudFBsYXllciwKICAgIG9uSm9pbmdhbWU6ICRvcHRpb25zLmpvaW5HYW1lLAogICAgb25RdWl0Z2FtZTogJG9wdGlvbnMucXVpdEdhbWUsCiAgICBvbktpY2twbGF5ZXI6ICRvcHRpb25zLmtpY2tQbGF5ZXIsCiAgICBvbkNoYW5nZWNvbG9yOiAkb3B0aW9ucy5jaGFuZ2VDb2xvciwKICAgIG9uQ2hhbmdlbWlzdGVyeDogJG9wdGlvbnMuY2hhbmdlTWlzdGVyWCwKICAgIG9uU3RhcnRnYW1lOiAkb3B0aW9ucy5zdGFydEdhbWUKICB9LCBudWxsLCA4CiAgLyogUFJPUFMgKi8KICAsIFsicGxheWVycyIsICJjdXJyZW50LXBsYXllciIsICJvbkpvaW5nYW1lIiwgIm9uUXVpdGdhbWUiLCAib25LaWNrcGxheWVyIiwgIm9uQ2hhbmdlY29sb3IiLCAib25DaGFuZ2VtaXN0ZXJ4IiwgIm9uU3RhcnRnYW1lIl0pKSA6ICRkYXRhLnN0YXR1cyA9PT0gMSA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfY29tcG9uZW50X0dhbWVQaGFzZSwgewogICAga2V5OiAxLAogICAgcGxheWVyczogJGRhdGEucGxheWVycywKICAgICJjdXJyZW50LXBsYXllciI6ICRkYXRhLmN1cnJlbnRQbGF5ZXIsCiAgICBnYW1lOiAkZGF0YS5nYW1lLAogICAgImNoYW5nZWQtc3RhdHVzLXBhbmVsIjogJGRhdGEuY2hhbmdlZFN0YXR1c1BhbmVsLAogICAgb25Nb3ZlOiAkb3B0aW9ucy5tb3ZlLAogICAgb25DbG9zZVN0YXR1c0NoYW5nZWRQYW5lbDogX2NhY2hlWzNdIHx8IChfY2FjaGVbM10gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgIHJldHVybiAkZGF0YS5jaGFuZ2VkU3RhdHVzUGFuZWwuc2hvdyA9IGZhbHNlOwogICAgfSksCiAgICBvblVzZURvdWJsZVR1cm46ICRvcHRpb25zLnVzZURvdWJsZVR1cm4KICB9LCBudWxsLCA4CiAgLyogUFJPUFMgKi8KICAsIFsicGxheWVycyIsICJjdXJyZW50LXBsYXllciIsICJnYW1lIiwgImNoYW5nZWQtc3RhdHVzLXBhbmVsIiwgIm9uTW92ZSIsICJvblVzZURvdWJsZVR1cm4iXSkpIDogJGRhdGEuc3RhdHVzID09PSAyID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKF9jb21wb25lbnRfUG9zdEdhbWVQaGFzZSwgewogICAga2V5OiAyCiAgfSkpIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgidi1pZiIsIHRydWUpXSk7Cn0="},{"version":3,"sources":["C:\\Users\\matte\\Desktop\\papero\\unseen.papero.tk\\src\\views\\Game.vue"],"names":[],"mappings":";;;;;;;;;;uBACE,YAAA,CA4BM,KA5BN,EA4BM;AA5BD,IAAA,KAAK,EAAC,kBA4BL;AA5ByB,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,IAAA,CAAA,KAAA,IAAA,IAAA,CAAA,KAAA,OAAA,IAAA,YAAF;AAAA,KAAA;AA4B9B,GA5BN,E,CACE,YAAA,CAQ4D,4BAR5D,EAQ4D;AARxC,iBAAW,IAQ6B;AAPxC,IAAA,QAAQ,EAAE,KAAA,CAAA,QAO8B;AANxC,sBAAgB,IAMwB;AALxC,uBAAiB,KAAA,CAAA,cAKuB;AAJxC,IAAA,GAAG,EAAE,KAAA,CAAA,kBAImC;AAHxC,IAAA,IAAI,EAAE,KAAA,CAAA,iBAGkC;AAFxC,IAAA,YAAW,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,aAAE,KAAA,CAAA,cAAA,GAAc,KAAhB;AAAA,KAAA,CAE6B;AADxC,IAAA,aAAY,EAAE,QAAA,CAAA,WAC0B;AAAxC,IAAA,YAAW,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,aAAE,KAAA,CAAA,iBAAA,GAAkB,MAApB;AAAA,KAAA;AAA6B,GAR5D,E,IAAA,E;;AAAA,I,+DAAA,C,EASoB,KAAA,CAAA,MAAA,KAAM,C,kBAA1B,YAAA,CAQsC,uBARtC,EAQsC;UAAA;AAPvB,IAAA,OAAO,EAAE,KAAA,CAAA,OAOc;AANvB,sBAAgB,KAAA,CAAA,aAMO;AALvB,IAAA,UAAQ,EAAE,QAAA,CAAA,QAKa;AAJvB,IAAA,UAAQ,EAAE,QAAA,CAAA,QAIa;AAHvB,IAAA,YAAU,EAAE,QAAA,CAAA,UAGW;AAFvB,IAAA,aAAW,EAAE,QAAA,CAAA,WAEU;AADvB,IAAA,eAAa,EAAE,QAAA,CAAA,aACQ;AAAvB,IAAA,WAAS,EAAE,QAAA,CAAA;AAAY,GARtC,E,IAAA,E;;AAAA,I,4HAAA,C,IASsB,KAAA,CAAA,MAAA,KAAM,C,kBAA5B,YAAA,CAO6C,oBAP7C,EAO6C;UAAA;AANjC,IAAA,OAAO,EAAE,KAAA,CAAA,OAMwB;AALjC,sBAAgB,KAAA,CAAA,aAKiB;AAJjC,IAAA,IAAI,EAAE,KAAA,CAAA,IAI2B;AAHjC,4BAAsB,KAAA,CAAA,kBAGW;AAFjC,IAAA,MAAI,EAAE,QAAA,CAAA,IAE2B;AADjC,IAAA,yBAA0B,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,aAAE,KAAA,CAAA,kBAAA,CAAmB,IAAnB,GAAuB,KAAzB;AAAA,KAAA,CACO;AAAjC,IAAA,eAAe,EAAE,QAAA,CAAA;AAAgB,GAP7C,E,IAAA,E;;AAAA,I,0FAAA,C,IAQ0B,KAAA,CAAA,MAAA,KAAM,C,kBAAhC,YAAA,CAAuC,wBAAvC,EAAuC;AAAA,IAAA,GAAA,EAAA;AAAA,GAAvC,C,sCA3BF,C","sourcesContent":["<template>\r\n  <div class=\"game__main-panel\" @click=\"click\">\r\n    <UserHamburgerMenu :show-chat=\"true\"\r\n                       :messages=\"messages\"\r\n                       :disable-logout=\"true\"\r\n                       :unread-messages=\"unreadMessages\"\r\n                       :src=\"hamburgerMenuImage\"\r\n                       :show=\"showHamburgerMenu\"\r\n                       @chat-opened=\"unreadMessages=false\"\r\n                       @send-message=\"sendMessage\"\r\n                       @toggle-show=\"showHamburgerMenu=$event\"/>\r\n    <PreGamePhase v-if=\"status===0\"\r\n                  :players=\"players\"\r\n                  :current-player=\"currentPlayer\"\r\n                  @joingame=\"joinGame\"\r\n                  @quitgame=\"quitGame\"\r\n                  @kickplayer=\"kickPlayer\"\r\n                  @changecolor=\"changeColor\"\r\n                  @changemisterx=\"changeMisterX\"\r\n                  @startgame=\"startGame\"/>\r\n    <GamePhase v-else-if=\"status===1\"\r\n               :players=\"players\"\r\n               :current-player=\"currentPlayer\"\r\n               :game=\"game\"\r\n               :changed-status-panel=\"changedStatusPanel\"\r\n               @move=\"move\"\r\n               @close-status-changed-panel=\"changedStatusPanel.show=false\"\r\n               @use-double-turn=\"useDoubleTurn\"/>\r\n    <PostGamePhase v-else-if=\"status===2\"/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport mitt from \"mitt\";\r\nimport {colorCorrispectives, webSocketUrl} from \"../constants/constants\";\r\nimport events from \"../constants/webSocketEvents\";\r\nimport {useRoute} from \"vue-router\";\r\nimport io from \"socket.io-client\";\r\nimport {defineAsyncComponent} from \"vue\";\r\nimport PreGamePhase from \"../components/PreGamePhase\";\r\nimport GamePhase from \"../components/GamePhase\";\r\nimport PostGamePhase from \"../components/PostGamePhase\";\r\n\r\nwindow.mitt = window.mitt || new mitt();\r\n\r\nconst UserHamburgerMenu = defineAsyncComponent(() => import(\"../components/UserHamburgerMenu\" /* webpackChunkName: \"userHamburgerMenu\" */));\r\n\r\nexport default {\r\n  name: \"Game\",\r\n  components: {\r\n    UserHamburgerMenu,\r\n    PreGamePhase,\r\n    GamePhase,\r\n    PostGamePhase\r\n  },\r\n  data(){\r\n    return {\r\n      socket: null,\r\n      gameId: useRoute().params.gameId,\r\n      status: undefined,\r\n      currentPlayer: undefined,\r\n      players: [],\r\n      game: {},\r\n      messages: [],\r\n      unreadMessages: false,\r\n      showHamburgerMenu: false,\r\n      changedStatusPanel: {\r\n        title: null,\r\n        description: null,\r\n        show: false\r\n      },\r\n      hamburgerMenuImage: require(\"@/assets/hamburger_icon_light.png\")\r\n    }\r\n  },\r\n  methods: {\r\n    setupData(data) {\r\n      console.log(data);\r\n      let wasYourTurn;\r\n      if(this.currentPlayer) wasYourTurn = this.game.playingPlayer === this.currentPlayer.local_id;\r\n      let wasRevelation = this.game.isRevelation;\r\n      this.status = data.status;\r\n      if(data.your_local_id!=null){\r\n        data.players.forEach(player => {\r\n          if(player.local_id===data.your_local_id){\r\n            this.currentPlayer = player;\r\n          }\r\n        })\r\n      } else {\r\n        this.currentPlayer = null;\r\n      }\r\n      this.players = data.players;\r\n      this.game = {\r\n        playingPlayer: data.players_turn,\r\n        isRevelation: data.is_revelation_turn,\r\n        lastMisterXKnownPosition: data.last_known_position,\r\n        misterXMoves: data.mister_x_moves\r\n      }\r\n      if(this.currentPlayer) {\r\n        let isYourTurn = this.game.playingPlayer === this.currentPlayer.local_id;\r\n        if ( !wasYourTurn && isYourTurn ) this.$toast.show(\r\n            \"It's your turn\",\r\n            {\r\n              duration: 4000,\r\n              maxToasts: 4,\r\n              className: \"toast turn-notification\",\r\n              position: \"top\"\r\n            }\r\n        );\r\n      }\r\n\r\n      let isRevelation = this.game.isRevelation;\r\n      if(!wasRevelation && isRevelation) {\r\n        this.handleEvents(\"Revelation\",\r\n            \"Mister X's position is \" + this.game.lastMisterXKnownPosition+\"! Go catch him!\",\r\n            4000);\r\n        this.players.forEach(player => {\r\n          if(player.is_mister_x) player.position = this.game.lastMisterXKnownPosition;\r\n        })\r\n      }\r\n      window.mitt.emit(\"update-pawns\", this.players);\r\n    },\r\n    appendMessage(data){\r\n      let message = {};\r\n      message.localId = data._from;\r\n      message.username = this.findUsernameByLocalId(data._from);\r\n      message.body = data.message;\r\n      message.color = this.findColorByLocalId(data._from);\r\n      message.fromYou = data._from === this.currentPlayer.local_id;\r\n      this.messages.push(message);\r\n      let t = setInterval(()=>{\r\n        let chat = document.getElementById(\"chat-container\");\r\n        chat.scrollTop = chat.scrollHeight;\r\n        clearInterval(t);\r\n      }, 100)\r\n    },\r\n    findUsernameByLocalId(id){\r\n      for(let i = 0; i < this.players.length; i++){\r\n        if(this.players[i].local_id===id){\r\n          return this.players[i].username;\r\n        }\r\n      }\r\n      return null;\r\n    },\r\n    findColorByLocalId(id){\r\n      for(let i = 0; i < this.players.length; i++){\r\n        if(this.players[i].local_id===id){\r\n          return colorCorrispectives[this.players[i].color];\r\n        }\r\n      }\r\n      return null;\r\n    },\r\n    messageReceived(data){\r\n      this.appendMessage(data);\r\n      this.unreadMessages = true;\r\n      this.$toast.show(data.message, {\r\n        duration: 2000,\r\n        maxToasts: 4,\r\n        className: \"toast\"\r\n      });\r\n    },\r\n    joinGame() {\r\n      this.socket.emit(events.JOIN_GAME);\r\n    },\r\n    quitGame() {\r\n      this.socket.emit(events.QUIT_GAME);\r\n    },\r\n    kickPlayer(localId){\r\n      this.socket.emit(events.KICK_PLAYER, localId);\r\n    },\r\n    changeColor(newColor){\r\n      this.socket.emit(events.CHANGE_COLOR, newColor);\r\n    },\r\n    startGame(){\r\n      this.socket.emit(events.START_GAME);\r\n    },\r\n    changeMisterX(newMisterX){\r\n      this.socket.emit(events.CHANGE_MISTER_X, newMisterX);\r\n    },\r\n    sendMessage(message){\r\n      let msg = message;\r\n      msg._from = this.currentPlayer.local_id;\r\n      this.socket.emit(events.CHAT, msg);\r\n    },\r\n    move(event){\r\n      this.socket.emit(events.MOVE, event);\r\n    },\r\n    useDoubleTurn(){\r\n      this.socket.emit(events.USE_DOUBLE_TURN);\r\n    },\r\n    handleEvents (title, description, time){\r\n      this.changedStatusPanel.title = title;\r\n      this.changedStatusPanel.description = description;\r\n      this.changedStatusPanel.show = true;\r\n      const show = async () => {\r\n        setTimeout(()=>{\r\n          this.changedStatusPanel.show = false;\r\n        }, time)\r\n      }\r\n      show();\r\n    }\r\n  },\r\n  mounted() {\r\n    this.socket = io(webSocketUrl, {\r\n      path: \"/unseen/socket.io/\"\r\n    });\r\n\r\n    this.socket.emit(events.CONNECT_TO_GAME, {game_id: this.gameId});\r\n\r\n    this.socket.on(events.CONNECT_TO_GAME, (data) => {\r\n      this.setupData(data);\r\n    });\r\n\r\n    this.socket.on(events.LOBBY_MODIFIED, data => {\r\n      this.setupData(data);\r\n    });\r\n\r\n    this.socket.on(events.START_GAME, data => {\r\n      this.setupData(data);\r\n    });\r\n\r\n    this.socket.on(events.GAME_MODIFIED, data => {\r\n      this.setupData(data);\r\n    });\r\n\r\n    this.socket.on(events.USE_DOUBLE_TURN, () => {\r\n      if(!this.currentPlayer.is_mister_x){\r\n        this.handleEvents(\"Double turn\",\r\n            \"Oh no! Mister X played a double turn card, you were close!\",\r\n            4000);\r\n      } else {\r\n        this.currentPlayer.used_double_turns++;\r\n      }\r\n    });\r\n\r\n    this.socket.on(events.CHAT, data => {\r\n      this.messageReceived(data);\r\n    });\r\n\r\n    this.status = 1;\r\n    this.currentPlayer = {\r\n      local_id: 0,\r\n      color: -1,\r\n      is_mister_x: true,\r\n      is_admin: true,\r\n      username: \"jacopo\",\r\n      used_taxi: 0,\r\n      used_bus: 0,\r\n      used_underground: 0,\r\n      used_secret_moves: 0,\r\n      used_double_turns: 0,\r\n      online: true,\r\n      position: Math.floor(Math.random()*186+1),\r\n      available_moves: {\r\n        taxi: [8],\r\n        bus: [47, 59],\r\n        underground: [47]\r\n      }\r\n    }\r\n    this.players = [\r\n      this.currentPlayer,\r\n      {\r\n        local_id: 1,\r\n        color: 1,\r\n        is_mister_x: false,\r\n        is_admin: false,\r\n        username: \"matteo\",\r\n        online: true,\r\n        position: 2\r\n      },\r\n      {\r\n        local_id: 2,\r\n        color: 2,\r\n        is_mister_x: false,\r\n        is_admin: false,\r\n        username: \"rami\",\r\n        online: false,\r\n        position: 3\r\n      },\r\n      {\r\n        local_id: 3,\r\n        color: 3,\r\n        is_mister_x: false,\r\n        is_admin: false,\r\n        username: \"tave\",\r\n        online: true,\r\n        position: 4\r\n      }\r\n    ]\r\n    this.game = {\r\n      playingPlayer: 0,\r\n      misterXMoves: [\r\n        {\r\n          transport: 0,\r\n          position: null\r\n        },\r\n        {\r\n          transport: 1,\r\n          position: null\r\n        },\r\n        {\r\n          transport: 2,\r\n          position: 30\r\n        },\r\n        {\r\n          transport: 0,\r\n          position: null\r\n        }\r\n      ]\r\n    }\r\n\r\n    this.messages = [\r\n      {\r\n        body: \"ciaooo\",\r\n        local_id: 0,\r\n        fromYou: true,\r\n        username: \"jacopo\",\r\n        color: \"gray\"\r\n      }\r\n    ];\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"../styles/global\";\r\n\r\n.game__main-panel{\r\n  background-image: url(\"../assets/background_image.jpg\");\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  background-position: bottom;\r\n\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n}\r\n\r\nbutton {\r\n  color: white;\r\n  padding: 1%;\r\n  background: transparent;\r\n  border: 2px solid white;\r\n  transition: all 0.5s;\r\n  margin: 1%;\r\n\r\n  &:hover{\r\n    background-color: white;\r\n    color: $theme-color-dark;\r\n  }\r\n\r\n  &:focus{\r\n    outline: none;\r\n  }\r\n}\r\n\r\n.toast{\r\n  display: grid;\r\n  align-items: center;\r\n  animation-duration: 150ms;\r\n  margin: 0.5em 0;\r\n  border-radius: 0.5em;\r\n  pointer-events: auto;\r\n  color: #fff;\r\n  background-color: orange;\r\n  min-height: 3em;\r\n  cursor: pointer;\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  padding: 0.5em 2em;\r\n  word-break: break-word;\r\n  width: fit-content;\r\n  align-self: flex-end;\r\n\r\n  &.turn-notification {\r\n    background-color: black;\r\n    align-self: center;\r\n    justify-content: start;\r\n  }\r\n}\r\n</style>"],"sourceRoot":""}]}