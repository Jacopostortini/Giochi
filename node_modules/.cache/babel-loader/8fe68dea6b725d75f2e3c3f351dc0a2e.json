{"remainingRequest":"/media/jacopo/VolumeDati/Documenti/ScotlandYard/node_modules/thread-loader/dist/cjs.js!/media/jacopo/VolumeDati/Documenti/ScotlandYard/node_modules/babel-loader/lib/index.js!/media/jacopo/VolumeDati/Documenti/ScotlandYard/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/media/jacopo/VolumeDati/Documenti/ScotlandYard/node_modules/cache-loader/dist/cjs.js??ref--0-0!/media/jacopo/VolumeDati/Documenti/ScotlandYard/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/media/jacopo/VolumeDati/Documenti/ScotlandYard/src/views/Game.vue?vue&type=template&id=ac95d31a&scoped=true","dependencies":[{"path":"/media/jacopo/VolumeDati/Documenti/ScotlandYard/src/views/Game.vue","mtime":1612471207386},{"path":"/media/jacopo/VolumeDati/Documenti/ScotlandYard/node_modules/cache-loader/dist/cjs.js","mtime":1611513038191},{"path":"/media/jacopo/VolumeDati/Documenti/ScotlandYard/node_modules/thread-loader/dist/cjs.js","mtime":1611513039183},{"path":"/media/jacopo/VolumeDati/Documenti/ScotlandYard/node_modules/babel-loader/lib/index.js","mtime":1611513038163},{"path":"/media/jacopo/VolumeDati/Documenti/ScotlandYard/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1611513039215},{"path":"/media/jacopo/VolumeDati/Documenti/ScotlandYard/node_modules/cache-loader/dist/cjs.js","mtime":1611513038191},{"path":"/media/jacopo/VolumeDati/Documenti/ScotlandYard/node_modules/vue-loader-v16/dist/index.js","mtime":1611513039215}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrLCBjcmVhdGVDb21tZW50Vk5vZGUgYXMgX2NyZWF0ZUNvbW1lbnRWTm9kZSwgd2l0aFNjb3BlSWQgYXMgX3dpdGhTY29wZUlkLCBwdXNoU2NvcGVJZCBhcyBfcHVzaFNjb3BlSWQsIHBvcFNjb3BlSWQgYXMgX3BvcFNjb3BlSWQgfSBmcm9tICJ2dWUiOwoKdmFyIF93aXRoSWQgPSAvKiNfX1BVUkVfXyovX3dpdGhTY29wZUlkKCJkYXRhLXYtYWM5NWQzMWEiKTsKCl9wdXNoU2NvcGVJZCgiZGF0YS12LWFjOTVkMzFhIik7Cgp2YXIgX2hvaXN0ZWRfMSA9IHsKICBjbGFzczogImdhbWVfX21haW4tcGFuZWwiCn07CgpfcG9wU2NvcGVJZCgpOwoKZXhwb3J0IHZhciByZW5kZXIgPSAvKiNfX1BVUkVfXyovX3dpdGhJZChmdW5jdGlvbiAoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgdmFyIF9jb21wb25lbnRfUHJlZ2FtZVBoYXNlID0gX3Jlc29sdmVDb21wb25lbnQoIlByZWdhbWVQaGFzZSIpOwoKICB2YXIgX2NvbXBvbmVudF9HYW1lUGhhc2UgPSBfcmVzb2x2ZUNvbXBvbmVudCgiR2FtZVBoYXNlIik7CgogIHZhciBfY29tcG9uZW50X1Bvc3RHYW1lUGhhc2UgPSBfcmVzb2x2ZUNvbXBvbmVudCgiUG9zdEdhbWVQaGFzZSIpOwoKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soImRpdiIsIF9ob2lzdGVkXzEsIFskc2V0dXAuc3RhdHVzID09PSAwID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKF9jb21wb25lbnRfUHJlZ2FtZVBoYXNlLCB7CiAgICBrZXk6IDAsCiAgICBwbGF5ZXJzOiAkc2V0dXAucGxheWVycywKICAgICJjdXJyZW50LXBsYXllciI6ICRzZXR1cC5jdXJyZW50UGxheWVyLAogICAgb25Kb2luZ2FtZTogJHNldHVwLmpvaW5HYW1lLAogICAgb25RdWl0Z2FtZTogJHNldHVwLnF1aXRHYW1lLAogICAgb25LaWNrcGxheWVyOiAkc2V0dXAua2lja1BsYXllciwKICAgIG9uQ2hhbmdlY29sb3I6ICRzZXR1cC5jaGFuZ2VDb2xvciwKICAgIG9uQ2hhbmdlbWlzdGVyeDogJHNldHVwLmNoYW5nZU1pc3RlclgsCiAgICBvblN0YXJ0Z2FtZTogJHNldHVwLnN0YXJ0R2FtZQogIH0sIG51bGwsIDgsIFsicGxheWVycyIsICJjdXJyZW50LXBsYXllciIsICJvbkpvaW5nYW1lIiwgIm9uUXVpdGdhbWUiLCAib25LaWNrcGxheWVyIiwgIm9uQ2hhbmdlY29sb3IiLCAib25DaGFuZ2VtaXN0ZXJ4IiwgIm9uU3RhcnRnYW1lIl0pKSA6ICRzZXR1cC5zdGF0dXMgPT09IDEgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soX2NvbXBvbmVudF9HYW1lUGhhc2UsIHsKICAgIGtleTogMSwKICAgIHBsYXllcnM6ICRzZXR1cC5wbGF5ZXJzLAogICAgImN1cnJlbnQtcGxheWVyIjogJHNldHVwLmN1cnJlbnRQbGF5ZXIsCiAgICBnYW1lOiAkc2V0dXAuZ2FtZQogIH0sIG51bGwsIDgsIFsicGxheWVycyIsICJjdXJyZW50LXBsYXllciIsICJnYW1lIl0pKSA6ICRzZXR1cC5zdGF0dXMgPT09IDIgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soX2NvbXBvbmVudF9Qb3N0R2FtZVBoYXNlLCB7CiAgICBrZXk6IDIKICB9KSkgOiBfY3JlYXRlQ29tbWVudFZOb2RlKCIiLCB0cnVlKV0pOwp9KTs="},{"version":3,"sources":["/media/jacopo/VolumeDati/Documenti/ScotlandYard/src/views/Game.vue"],"names":[],"mappings":";;;;;;;AACO,EAAA,KAAK,EAAC;;;;;;;;;;;;uBAAX,YAAA,CAeM,KAfN,EAAA,UAAA,EAeM,CAdgB,MAAA,CAAA,MAAA,KAAM,C,kBAA1B,YAAA,CAQsC,uBARtC,EAQsC;UAAA;AAPvB,IAAA,OAAO,EAAE,MAAA,CAAA,OAOc;AANvB,sBAAgB,MAAA,CAAA,aAMO;AALvB,IAAA,UAAQ,EAAE,MAAA,CAAA,QAKa;AAJvB,IAAA,UAAQ,EAAE,MAAA,CAAA,QAIa;AAHvB,IAAA,YAAU,EAAE,MAAA,CAAA,UAGW;AAFvB,IAAA,aAAW,EAAE,MAAA,CAAA,WAEU;AADvB,IAAA,eAAa,EAAE,MAAA,CAAA,aACQ;AAAvB,IAAA,WAAS,EAAE,MAAA,CAAA;AAAY,GARtC,E,IAAA,E,CAAA,E,4HAAA,C,IASsB,MAAA,CAAA,MAAA,KAAM,C,kBAA5B,YAAA,CAGyB,oBAHzB,EAGyB;UAAA;AAFb,IAAA,OAAO,EAAE,MAAA,CAAA,OAEI;AADb,sBAAgB,MAAA,CAAA,aACH;AAAb,IAAA,IAAI,EAAE,MAAA,CAAA;AAAO,GAHzB,E,IAAA,E,CAAA,E,qCAAA,C,IAI0B,MAAA,CAAA,MAAA,KAAM,C,kBAAhC,YAAA,CAAuC,wBAAvC,EAAuC;AAAA,IAAA,GAAA,EAAA;AAAA,GAAvC,C,iCACI,CAfN,C","sourcesContent":["<template>\n  <div class=\"game__main-panel\">\n    <PregamePhase v-if=\"status===0\"\n                  :players=\"players\"\n                  :current-player=\"currentPlayer\"\n                  @joingame=\"joinGame\"\n                  @quitgame=\"quitGame\"\n                  @kickplayer=\"kickPlayer\"\n                  @changecolor=\"changeColor\"\n                  @changemisterx=\"changeMisterX\"\n                  @startgame=\"startGame\"/>\n    <GamePhase v-else-if=\"status===1\"\n               :players=\"players\"\n               :current-player=\"currentPlayer\"\n               :game=\"game\"/>\n    <PostGamePhase v-else-if=\"status===2\"/>\n  </div>\n</template>\n\n<script>\nimport PregamePhase from \"../components/PregamePhase\";\nimport GamePhase from \"../components/GamePhase\";\nimport PostGamePhase from \"../components/PostGamePhase\";\nimport {webSocketUrl} from \"../constants/constants\";\nimport events from \"../constants/webSocketEvents\";\nimport {useRoute} from \"vue-router\";\nimport io from \"socket.io-client\";\nimport {ref} from \"@vue/reactivity\";\n\n\nexport default {\n  name: \"Game\",\n  components: {PostGamePhase, GamePhase, PregamePhase},\n  setup(){\n\n    const socket = io(webSocketUrl);\n\n    const gameId = useRoute().params.gameId;\n    const status = ref(undefined);\n    const currentPlayer = ref(undefined);\n    const players = ref([]);\n    const game = ref({});\n\n    //TODO: LOGIC FOR FETCHING USER ID FROM FLASK AND USERNAME\n    let id = prompt(\"id:\")\n    let username = prompt(\"username:\")\n    socket.emit(events.CONNECT_TO_GAME, {user_id: id, game_id: gameId, username: username});\n\n    function setupData(data){\n      status.value = data.status;\n      if(data.your_local_id!=null){\n        data.players.forEach(player => {\n          if(player.local_id===data.your_local_id){\n            currentPlayer.value = player;\n          }\n        })\n      } else {\n        currentPlayer.value = null;\n      }\n      players.value = data.players;\n      game.value = {\n        playingPlayer: data.players_turn,\n        isRevelation: data.is_revelation_turn,\n        lastMisterXKnownPosition: data.last_known_position,\n        misterXMoves: data.mister_x_moves\n      }\n    }\n\n    socket.on(events.CONNECT_TO_GAME, (data) => {\n      setupData(data);\n    });\n\n    socket.on(events.LOBBY_MODIFIED, data => {\n      setupData(data);\n    });\n\n    socket.on(events.START_GAME, data => {\n      setupData(data);\n    });\n\n    function joinGame() {\n      socket.emit(events.JOIN_GAME);\n    }\n\n    function quitGame() {\n      socket.emit(events.QUIT_GAME);\n    }\n\n    function kickPlayer(localId){\n      socket.emit(events.KICK_PLAYER, localId);\n    }\n\n    function changeColor(newColor){\n      socket.emit(events.CHANGE_COLOR, newColor);\n    }\n\n    function startGame(){\n      socket.emit(events.START_GAME);\n    }\n\n    function changeMisterX(newMisterX){\n      socket.emit(events.CHANGE_MISTER_X, newMisterX);\n    }\n\n    return {\n      status,\n      currentPlayer,\n      players,\n      game,\n      joinGame,\n      quitGame,\n      kickPlayer,\n      changeColor,\n      changeMisterX,\n      startGame\n    }\n\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n.game__main-panel{\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n}\n</style>"],"sourceRoot":""}]}